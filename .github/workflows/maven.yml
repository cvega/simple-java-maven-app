name: Maven CI/CD

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - master

jobs:
  maven:
    runs-on: self-hosted
    container:
      image: maven:3.6.3-jdk-8

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: setup build env vars
      run: |
        git fetch --prune --unshallow --tags
        CURRENT_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
        echo "RELEASE_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$NF+=1} 1')" >> $GITHUB_ENV
        echo "SHORT_HEAD=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        
    - name: mvn clean verify
      if: github.event_name == 'pull_request' || github.ref != 'refs/heads/master'
      # this only applies to pull requests and branches 
      run: mvn clean verify

    - name: create snapshot
      # create the snapshot for the dev branch on release*
      if: github.event_name == 'push' && github.ref == 'refs/heads/release*'
      run: |
        mvn versions:set -DnewVersion="${{ env.RELEASE_VERSION }}-${{ env.SHORT_HEAD }}-$(date '+%Y%m%d%H%M%S')-SNAPSHOT"
        mvn clean install
    
    - uses: actions/github-script@v6
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      id: tag-release
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"
        script: |
          github.rest.repos.createRelease({
            owner: "cvega",
            repo: "simple-java-maven-app",
            tag_name: "${{ env.RELEASE_VERSION }}"
          })
    
    - name: create release
      # create a release off the master branch
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        echo "<settings><servers><server><id>github</id><username>OWNER</username><password>${GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
        mvn versions:set -DnewVersion=${{ env.RELEASE_VERSION }}-RELEASE
        # Deploy the release to GitHub Packages
        mvn clean deploy -Drelease
    
    - uses: actions/upload-artifact@v3
      name: archive artifact
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      with:
        name: "maven-artifact-${{ env.RELEASE_VERSION }}-RELEASE"
        path: target/**     
    

